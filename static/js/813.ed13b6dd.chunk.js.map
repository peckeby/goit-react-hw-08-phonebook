{"version":3,"file":"static/js/813.ed13b6dd.chunk.js","mappings":"gOAYe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAMMC,EAAiB,SAAAC,GACrB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,WACHJ,EAAYK,GACZ,MACF,IAAK,aACHP,EAAcO,GACd,MACF,QACE,OAEL,EAaD,OACE,UAAC,KAAD,CAAMC,SAZa,SAAAC,GAlBD,IAAAC,EAmBlBD,EAAIE,iBACAhB,EAASiB,OAAS,IApBJF,EAoBqBT,EAnBhCN,EAASe,QAAO,SAAAG,GAAO,OAAIA,EAAQP,KAAKQ,SAASJ,EAA1B,KAmBmBE,OAAS,EACxDG,MAAM,GAAD,OAAId,EAAJ,6BAELR,GAASuB,EAAAA,EAAAA,IAAW,CAAEV,KAAML,EAAUgB,OAAQlB,KAEhDC,EAAc,IACdE,EAAY,GACb,EAGC,WACE,UAAC,KAAD,mBAEE,SAAC,KAAD,CACEgB,KAAK,OACLZ,KAAK,WACLa,SAAUhB,EACVI,MAAON,EACPmB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAAC,KAAD,oBAEE,SAAC,KAAD,CACEJ,KAAK,MACLZ,KAAK,aACLa,SAAUhB,EACVI,MAAOR,EACPqB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAAC,KAAD,CAAeJ,KAAK,SAApB,2BAGL,C","sources":["components/ContactForm/ContactForm.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\n\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  AddContactBtn,\n} from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n  const [userNumber, setUserNumber] = useState('');\n  const [userName, setUserName] = useState('');\n\n  const fiterChange = filter => {\n    return contacts.filter(contact => contact.name.includes(filter));\n  };\n\n  const onHandleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'userName':\n        setUserName(value);\n        break;\n      case 'userNumber':\n        setUserNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (contacts.length > 0 && fiterChange(userName).length > 0) {\n      alert(`${userName} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name: userName, number: userNumber }));\n    }\n    setUserNumber('');\n    setUserName('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"userName\"\n          onChange={onHandleChange}\n          value={userName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Phone\n        <FormInput\n          type=\"tel\"\n          name=\"userNumber\"\n          onChange={onHandleChange}\n          value={userNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <AddContactBtn type=\"submit\">Add contact</AddContactBtn>\n    </Form>\n  );\n}\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","getContacts","useState","userNumber","setUserNumber","userName","setUserName","onHandleChange","event","target","name","value","onSubmit","evt","filter","preventDefault","length","contact","includes","alert","addContact","number","type","onChange","pattern","title","required"],"sourceRoot":""}